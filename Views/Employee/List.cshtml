@{
    ViewData["Title"] = "Employee List";
}

<div class="employee-container">
    <h2>Employee List</h2>

    <!-- Search Bar -->
    <div class="search-container">
        <input type="text" id="searchBox" placeholder="🔍 Search by name..." onkeyup="searchEmployee()" />
    </div>

    <table class="styled-table" id="employeeTable"></table>
</div>

<style>
    .employee-container {
        max-width: 900px;
        margin: 30px auto;
        padding: 20px;
        background: #fff;
        border-radius: 12px;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
    }

    h2 {
        text-align: center;
        color: #333;
        margin-bottom: 20px;
    }

    .search-container {
        display: flex;
        justify-content: center;
        margin-bottom: 15px;
    }

        .search-container input {
            width: 70%;
            padding: 10px 15px;
            border-radius: 25px;
            border: 1px solid #ccc;
            font-size: 16px;
            outline: none;
            transition: 0.3s;
        }

            .search-container input:focus {
                border-color: #007bff;
                box-shadow: 0 0 8px rgba(0, 123, 255, 0.3);
            }

    .styled-table {
        width: 100%;
        border-collapse: collapse;
        text-align: left;
    }

        .styled-table th, .styled-table td {
            padding: 12px;
            border-bottom: 1px solid #ddd;
        }

        .styled-table th {
            background-color: #f7f7f7;
            font-weight: bold;
        }

        .styled-table tr:hover {
            background-color: #f1f1f1;
        }

    .input-field {
        width: 95%;
        padding: 6px;
        border-radius: 6px;
        border: 1px solid #ccc;
    }

    .update-btn, .delete-btn {
        padding: 6px 12px;
        border: none;
        border-radius: 6px;
        font-size: 14px;
        cursor: pointer;
        margin-right: 5px;
        transition: 0.3s;
    }

    .update-btn {
        background-color: #28a745;
        color: #fff;
    }

        .update-btn:hover {
            background-color: #218838;
        }

    .delete-btn {
        background-color: #dc3545;
        color: #fff;
    }

        .delete-btn:hover {
            background-color: #c82333;
        }
</style>

<script>
    let allEmployees = [];

    async function loadEmployees() {
        const response = await fetch('/api/EmployeeApi/list');
        allEmployees = await response.json();
        renderTable(allEmployees);
    }

    function renderTable(employees) {
        let html = `
            <tr>
                <th>Name</th>
                <th>Address1</th>
                <th>State</th>
                <th>Action</th>
            </tr>
        `;
        if (employees.length === 0) {
            html += `<tr><td colspan="4" style="text-align:center; color:#888;">No employees found</td></tr>`;
        } else {
            employees.forEach(emp => {
                html += `
                    <tr>
                        <td><input class="input-field" value="${emp.employeeName}" id="name_${emp.id}" /></td>
                        <td><input class="input-field" value="${emp.address1}" id="address1_${emp.id}" /></td>
                        <td><input class="input-field" value="${emp.state}" id="state_${emp.id}" /></td>
                        <td>
                            <button class="update-btn" onclick="updateEmployee(${emp.id})">Update</button>
                            <button class="delete-btn" onclick="deleteEmployee(${emp.id})">Delete</button>
                        </td>
                    </tr>
                `;
            });
        }
        document.getElementById('employeeTable').innerHTML = html;
    }

    async function updateEmployee(id) {
        const data = {
            EmployeeName: document.getElementById(`name_${id}`).value,
            Address1: document.getElementById(`address1_${id}`).value,
            State: document.getElementById(`state_${id}`).value
        };

        const response = await fetch(`/api/EmployeeApi/update/${id}`, {
            method: 'PUT',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(data)
        });

        if (response.ok) {
            alert('✅ Updated Successfully!');
        } else {
            alert('❌ Update Failed!');
        }
    }

    async function deleteEmployee(id) {
        if (!confirm('Are you sure you want to delete this employee?')) return;

        const response = await fetch(`/api/EmployeeApi/delete/${id}`, { method: 'DELETE' });

        if (response.ok) {
            alert('🗑 Deleted Successfully!');
            loadEmployees();
        } else {
            alert('❌ Deletion Failed!');
        }
    }

    function searchEmployee() {
        const query = document.getElementById('searchBox').value.toLowerCase();
        const filtered = allEmployees.filter(emp => emp.employeeName.toLowerCase().includes(query));
        renderTable(filtered);
    }

    loadEmployees();
</script>
